from aiogram.types import InlineKeyboardButton
from aiogram.types import InlineKeyboardMarkup
from more_itertools import chunked

back_inline = InlineKeyboardMarkup(row_width=1)

back_inline.add(
    InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='üîô –ù–∞–∑–∞–¥')
)


# Battle
def arena_inline(lists, columns=2):
    kb = InlineKeyboardMarkup(row_width=2)

    for sublist in chunked(lists, columns):
        row = []

        for item in sublist:
            name = item['name']
            fraction = item['location']
            text = f"{name}{f': {fraction}' if len(fraction) > 0 else ''}"

            button = InlineKeyboardButton(text=text, callback_data=item['id'])
            row.append(button)

        try:
            kb.add(row[0], row[1])
        except IndexError:
            kb.add(row[0])

    kb.add(InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='üîô –ù–∞–∑–∞–¥'))

    return kb


def floor_inline(lists, columns=2):
    kb = InlineKeyboardMarkup(row_width=2)

    for sublist in chunked(lists, columns):
        row = []

        for item in sublist:
            name = item['name']
            fraction = item['location']
            text = f"{name}{f': {fraction}' if len(fraction) > 0 else ''}"

            button = InlineKeyboardButton(text=text, callback_data=item['id'])
            row.append(button)

        try:
            kb.add(row[0], row[1])
        except IndexError:
            kb.add(row[0])

    kb.add(InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='üîô –ù–∞–∑–∞–¥'))

    return kb


battle_start_inline = InlineKeyboardMarkup(row_width=1)

battle_start_inline.add(
    InlineKeyboardButton(text='–í –±–æ–π', callback_data='–í –±–æ–π'),
    InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='üîô –ù–∞–∑–∞–¥')
)

# Top
top_inline = InlineKeyboardMarkup(row_width=2)

top_inline.add(
    InlineKeyboardButton(text='–°–∏–ª—å–Ω–µ–π—à–∏–µ', callback_data='total_stats'),
    InlineKeyboardButton(text='–ë–æ–≥–∞—Ç–µ–π—à–∏–µ', callback_data='money'),
)
top_inline.add(
    InlineKeyboardButton(text='–°–∏–ª–∞', callback_data='strength'),
    InlineKeyboardButton(text='–•–ø', callback_data='health'),
)
top_inline.add(
    InlineKeyboardButton(text='–õ–æ–≤–∫–æ—Å—Ç—å', callback_data='dexterity'),
    InlineKeyboardButton(text='–°–∫–æ—Ä–æ—Å—Ç—å', callback_data='speed'),
)
top_inline.add(
    InlineKeyboardButton(text='–î—É—Ö', callback_data='soul'),
    InlineKeyboardButton(text='–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç', callback_data='intelligence'),
)
top_inline.add(
    InlineKeyboardButton(text='–ü–æ–¥—á–∏–Ω–µ–Ω–∏–µ', callback_data='submission'),
    InlineKeyboardButton(text='–ú–µ—Ç–∫–æ—Å—Ç—å', callback_data='accuracy'),
)
top_inline.add(
    InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='üîô –ù–∞–∑–∞–¥'),
)

# Character
battle_start_inline = InlineKeyboardMarkup(row_width=1)

battle_start_inline.add(
    InlineKeyboardButton(text='–í –±–æ–π', callback_data='–í –±–æ–π'),
    InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='üîô –ù–∞–∑–∞–¥')
)


def list_inline(lists, columns=2, label='name', cb_data='id'):
    kb = InlineKeyboardMarkup(row_width=2)

    for sublist in chunked(lists, columns):
        row = []

        for item in sublist:
            name = item[label]
            data = item[cb_data]
            button = InlineKeyboardButton(text=name, callback_data=data)

            row.append(button)

        try:
            kb.add(row[0], row[1])
        except IndexError:
            kb.add(row[0])

    kb.add(InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='üîô –ù–∞–∑–∞–¥'))

    return kb


# Skills
skill_add_inline = InlineKeyboardMarkup(row_width=1)

skill_add_inline.add(
    InlineKeyboardButton(text='–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å', callback_data='–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å'),
    InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='üîô –ù–∞–∑–∞–¥'),
)

skill_del_inline = InlineKeyboardMarkup(row_width=1)

skill_del_inline.add(
    InlineKeyboardButton(text='–û—Ç–∫—Ä–µ–ø–∏—Ç—å', callback_data='–û—Ç–∫—Ä–µ–ø–∏—Ç—å'),
    InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='üîô –ù–∞–∑–∞–¥'),
)

# Shop
shop_buy_inline = InlineKeyboardMarkup(row_width=1)

shop_buy_inline.add(
    InlineKeyboardButton(text='–ö—É–ø–∏—Ç—å –≤—Å—ë', callback_data='–ö—É–ø–∏—Ç—å –≤—Å—ë'),
    InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='üîô –ù–∞–∑–∞–¥'),
)

# Hunt
hunt_inline = InlineKeyboardMarkup(row_width=1)

hunt_inline.add(
    InlineKeyboardButton(text='–ó–æ–Ω–∞ –æ—Ö–æ—Ç—ã', callback_data='–ó–æ–Ω–∞ –æ—Ö–æ—Ç—ã'),
    InlineKeyboardButton(text='–î–Ω–µ–≤–Ω–∏–∫ –æ—Ö–æ—Ç–Ω–∏–∫–∞ (–ù–µ –¥–æ—Å—Ç—É–ø–µ–Ω)', callback_data='(–ù–µ –¥–æ—Å—Ç—É–ø–µ–Ω)'),
    InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='üîô –ù–∞–∑–∞–¥'),
)

hunt_action_inline = InlineKeyboardMarkup(row_width=2)

hunt_action_inline.add(
    InlineKeyboardButton(text='–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ', callback_data='–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ'),
)

hunt_action_inline.add(
    InlineKeyboardButton(text='–ü–æ–∫–∏–Ω—É—Ç—å –ª–µ—Å', callback_data='–ü–æ–∫–∏–Ω—É—Ç—å –ª–µ—Å'),
)

hunt_battle_inline = InlineKeyboardMarkup(row_width=2)

hunt_battle_inline.add(
    InlineKeyboardButton(text='–í –±–æ–π', callback_data='–í –±–æ–π'),
)


# hunting_kb = ReplyKeyboardMarkup(
#     keyboard=[
#         [KeyboardButton(text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å")],
#     ],
#     resize_keyboard=True)


# Team
def team_main_inline(is_team=False, is_leader=False):
    kb = InlineKeyboardMarkup(row_width=2)

    if is_team:
        if is_leader:
            kb.add(
                InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞', callback_data='–î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞'),
                # InlineKeyboardButton(text='–ò—Å–∫–ª—é—á–∏—Ç—å –∏–≥—Ä–æ–∫–∞', callback_data='–ò—Å–∫–ª—é—á–∏—Ç—å –∏–≥—Ä–æ–∫–∞'),
            )
            kb.add(
                InlineKeyboardButton(text='–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', callback_data='–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤'),
                InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data='–ù–∞—Å—Ç—Ä–æ–π–∫–∏'),
            )
        else:
            kb.add(
                InlineKeyboardButton(text='–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', callback_data='–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤'),
                InlineKeyboardButton(text='–í—ã–π—Ç–∏ –∏–∑ –≥—Ä—É–ø–ø—ã', callback_data='–í—ã–π—Ç–∏ –∏–∑ –≥—Ä—É–ø–ø—ã'),
            )
    else:
        kb.add(
            InlineKeyboardButton(text='–°–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É', callback_data='–°–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É'),
            InlineKeyboardButton(text='–í—Å–µ –∫–æ–º–∞–Ω–¥—ã', callback_data='–í—Å–µ –∫–æ–º–∞–Ω–¥—ã'),
        )

    kb.add(
        InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='üîô –ù–∞–∑–∞–¥'),
    )

    return kb


team_setting_inline = InlineKeyboardMarkup(row_width=1)

team_setting_inline.add(
    InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ', callback_data='–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ'),
    InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –ª–∏–¥–µ—Ä–∞', callback_data='–ò–∑–º–µ–Ω–∏—Ç—å –ª–∏–¥–µ—Ä–∞'),
    InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å', callback_data='–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å'),
    InlineKeyboardButton(text='–†–∞—Å–ø—É—Å—Ç–∏—Ç—å', callback_data='–†–∞—Å–ø—É—Å—Ç–∏—Ç—å'),
    InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='üîô –ù–∞–∑–∞–¥'),
)

teammate_menu_inline = InlineKeyboardMarkup(row_width=1)

teammate_menu_inline.add(
    InlineKeyboardButton(text='–ò—Å–∫–ª—é—á–∏—Ç—å', callback_data='–ò—Å–∫–ª—é—á–∏—Ç—å'),
    InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='üîô –ù–∞–∑–∞–¥'),
    # InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å', callback_data='–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å'),
)

yes_no_inline = InlineKeyboardMarkup(row_width=1)
yes_no_inline.add(
    InlineKeyboardButton(text='–î–∞', callback_data='–î–∞'),
    InlineKeyboardButton(text='–ù–µ—Ç', callback_data='–ù–µ—Ç'),
)
